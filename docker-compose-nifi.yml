version: '3.7'

services:
  postgres:
    container_name: postgres
    image: postgres:latest
    volumes:
      - postgres_data:/var/lib/postgresql/data
    ports:
      - "5432:5432"
    environment:
      - POSTGRES_PASSWORD=postgres
      - POSTGRES_USER=postgres
      - POSTGRES_DB=postgres
      
  nifi:
    image: apache/nifi:1.15.3
    container_name: nifi
    ports:
      - 8443:8443
    volumes:
      - ./files:/tmp/files/
      - ./data/:/tmp/data/
      - ./driver/:/tmp/driver/
      - nifi_conf:/opt/nifi/nifi-current/conf
      - nifi_database_repository:/opt/nifi/nifi-current/database_repository
      - nifi_flowfile_repository:/opt/nifi/nifi-current/flowfile_repository        
      - nifi_content_repository:/opt/nifi/nifi-current/content_repository
      - nifi_provenance_repository:/opt/nifi/nifi-current/provenance_repository
      - nifi_state:/opt/nifi/nifi-current/state
      
    environment:
      - SINGLE_USER_CREDENTIALS_USERNAME=admin
      - SINGLE_USER_CREDENTIALS_PASSWORD=nifi123admin
      - BEARER_TOKEN="AAAAAAAAAAAAAAAAAAAAADMQeAEAAAAARHrZlURhDY49gYvrUJK5OlGUsLY%3DXuF1AUPEzyeZl4LMfNJuugJaPOdSKgN4yqrsapnjvH63PLQKx0"
            
  nifi-registry:      
    image: apache/nifi-registry:1.15.3
    container_name: nifi-registry
    ports:
      - 18080:18080
    volumes:
      - nifi_registry:/opt/nifi-registry/nifi-registry-current/

  namenode:
    image: bde2020/hadoop-namenode:2.0.0-hadoop3.2.1-java8
    container_name: namenode
    volumes:
      - hadoop_namenode:/hadoop/dfs/name
    environment:
      - CLUSTER_NAME=test
    env_file:
      - ./hadoop.env
    ports:
      - 9870:9870      
      - 9000:9000

  datanode1:
    image: bde2020/hadoop-datanode:2.0.0-hadoop3.2.1-java8
    container_name: datanode1
    depends_on:
      - namenode
    volumes:
      - hadoop_datanode1:/hadoop/dfs/data
    env_file:
      - ./hadoop.env
      
  datanode2:
    image: bde2020/hadoop-datanode:2.0.0-hadoop3.2.1-java8
    container_name: datanode2
    depends_on:
      - namenode
    volumes:
      - hadoop_datanode2:/hadoop/dfs/data
    env_file:
      - ./hadoop.env    

  hue:
    image: gethue/hue:20201111-135001
    hostname: hue
    container_name: hue
    dns: 8.8.8.8
    ports:
      - "8888:8888"
    volumes:
      - ./conf.dist:/usr/share/hue/desktop/conf
    depends_on:
      - namenode

  pyproducer:
    build: ./pyproducer/
    container_name: pyproducer
    volumes:
      - ./files:/usr/src/app/files/
 
  spark-master:
    image: bde2020/spark-master:3.0.1-hadoop3.2
    container_name: spark-master
    ports:
      - 8080:8080
      - 4041:4040 
      - 9871:9870
      - 8089:8088
      - 8043:8042     
    environment:
      - PYSPARK_PYTHON=python3
    env_file:
      - ./hadoop.env
    volumes:     
      - ./shell:/shell/
      - ./spark:/spark/primeri
      - ./driver/:/driver/

  spark-worker1:
    image: bde2020/spark-worker:3.0.1-hadoop3.2
    container_name: spark-worker1
    depends_on:
      - spark-master
    environment:
      - SPARK_MASTER=spark://spark-master:7077
    ports:
      - 8081:8081
    env_file:
      - ./hadoop.env

  spark-worker2:
    image: bde2020/spark-worker:3.0.1-hadoop3.2
    container_name: spark-worker2
    depends_on:
      - spark-master
    environment:
      - SPARK_MASTER=spark://spark-master:7077
    ports:
      - 8082:8081
    env_file:
      - ./hadoop.env    
    
  zoo1:
    image: zookeeper:3.4.9
    container_name: zoo1
    ports:
      - "2181:2181"
    environment:
        ZOO_MY_ID: 1
        ZOO_PORT: 2181
        ZOO_SERVERS: server.1=zoo1:2888:3888
    volumes:
      - zoo1:/data
      - zoo1log:/datalog

  kafka1:
    image: confluentinc/cp-kafka:5.3.1
    container_name: kafka1
    ports:
      - "9092:9092"
    environment:
      KAFKA_ADVERTISED_LISTENERS: LISTENER_DOCKER_INTERNAL://kafka1:19092,LISTENER_DOCKER_EXTERNAL://${DOCKER_HOST_IP:-127.0.0.1}:9092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: LISTENER_DOCKER_INTERNAL:PLAINTEXT,LISTENER_DOCKER_EXTERNAL:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: LISTENER_DOCKER_INTERNAL
      KAFKA_ZOOKEEPER_CONNECT: "zoo1:2181"
      KAFKA_BROKER_ID: 1
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_LOG4J_LOGGERS: "kafka.controller=INFO,kafka.producer.async.DefaultEventHandler=INFO,state.change.logger=INFO"
    volumes:
      - kafka1:/var/lib/kafka/data
    depends_on:
      - zoo1

  druid:
    build: ./druid/
    container_name: druid
    ports:
      - "8889:8888"      
    volumes:
      - ./data:/opt/druid/conf/druid/single-server/micro-quickstart/_common/hadoop-xml
      - druid:/opt/druid/var/
           
  metabase:
    image: metabase/metabase
    container_name: metabase
    volumes:  
      - metabasedata:/metabase.db/
    ports:
      - "3000:3000"
      
volumes:
  nifi_conf: {}
  nifi_database_repository: {}
  nifi_flowfile_repository: {}
  nifi_content_repository: {}
  nifi_provenance_repository: {}
  nifi_state: {}
  nifi_registry: {}
  postgres_data: {} 
  hadoop_namenode: {}
  hadoop_datanode1: {}
  hadoop_datanode2: {}
  zoo1: {}
  zoo1log: {}
  kafka1: {}  
  metabasedata: {}
  storage: {}
  logs: {}
  druid: {}
   